version: '3.8'
services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coinex-prices
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ws_coinex:
    build: ./python
    restart: always
    environment:
      APIKEYCOINEX: ${APIKEYCOINEX}
      APISECRETKEYCOINEX: ${APISECRETKEYCOINEX}
      DBNAME: coinex-prices
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command: ["python", "/app/scripts/ws_coinex.py"]
    volumes:
      - ./python:/app
    depends_on:
      postgres:
        condition: service_healthy


  # nestjs:
  #   build: ./nestjs
  #   restart: always
  #   environment:
  #     DATABASE_URL: postgres://postgres:postgres@postgres:5432/coinex-prices 
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - postgres


  # ws_binance:
  #   build: ./python
  #   restart: always
  #   environment:
  #     APIKEYCOINEX: ${APIKEYCOINEX}
  #     APISECRETKEYCOINEX: ${APISECRETKEYCOINEX}
  #     DB_NAME: coinex-prices
  #     DB_USER: postgres
  #     DB_PASSWORD: postgres
  #     DB_HOST: postgres
  #   command: ["python", "/app/scripts/ws_binance.py"]
  #   volumes:
  #     - ./python:/app
  #   depends_on:
  #     - postgres